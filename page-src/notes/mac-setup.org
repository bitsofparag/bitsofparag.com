#+TITLE: Macbook Setup
#+author: Parag M.
#+date: 18-05-2022
#+Time-stamp: <2022-05-29 00:32:13 parag>
#+SETUPFILE: ../.setup/macros
#+SETUPFILE: ../.setup/options
#+OPTIONS: broken-links:mark H:2 title:t
#+STARTUP: fninline

#+begin_metadata
Published on {{{date(%e %b %Y)}}} â€¢ Updated {{{modification-time(%e %b %Y)}}}
#+end_metadata

#+begin_share
{{{tweet(https://www.bitsofparag.com/blog/2022/05/mac-setup.html, Macbook Setup)}}}
#+end_share

* Objective :noexport:

  To share setup instructions for a new Mac laptop

* Message :noexport:

  The message the reader gets from this is a (near) painless way to setup a new Mac

* Tone :noexport:

  Technical / Instructive

* {{{blog_intro(Follow the guide below to set up your new Macbook with necessary)}}}
tooling and other interesting packages. The content below is a dump from my personal notes
wherein I attempted to keep my new Macbook deterministic (without using NixOS) by logging everything
that I was installing, configuring and removing from the system. This is NOT a prescriptive guide,
rather a collection of good suggestions - choose what fits you best. Have fun!

If any instruction is outdated or incorrect or if you have suggestions for a new entry, please open a
PR [[https://github.com/bitsofparag/bitsofparag.com][here]] /(under "page-src/notes")/.

** Get started
 1. Set the keyboard from "System Preferences" - use Tab as "Ctrl" key.
 2. Set the keyboard from "System Preferences" - use English ABC Extended (or your preferred language).
 3. Clean up the desktop menu - remove stuff you don't need.
 4. Log in to the App Store with your new or existing Apple ID.
 5. Open Settings and update the computer name for access by outsiders. Something like
    "my-name.local" is recommended.
 6. [[https://support.apple.com/guide/mac-help/allow-a-remote-computer-to-access-your-mac-mchlp1066/mac][Enable ssh]] as well.
 7. Install [[https://brew.sh/][brew]]:
    #+begin_src sh
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    #+end_src
 8. Ensure [[https://brew.sh][brew]] is updated:
      #+BEGIN_SRC sh
        brew update
        brew tap homebrew/cask-versions
        brew upgrade
      #+END_SRC

** Install browsers
   1. Open Safari and install [[https://www.mozilla.org/en-GB/firefox/new/][Firefox]] and/or [[https://brave.com/][Brave]] browsers.
   2. /(Optional but not recommended)/ Install [[https://www.google.com/intl/de/chrome/dev/][Chrome Dev]] with =brew install --cask google-chrome-dev=.
   3. Install [[https://www.torproject.org/][Tor Browser]] with =brew install tor=.

** SSH Keys

   Set up SSH keys as follows:
   #+begin_src sh
     ssh-keygen -t ecdsa -b 521 -N '' -f ~/.ssh/id_ecdsa
     ssh-add ~/.ssh/id_ecdsa
   #+end_src

   Optionally, if you need to add the public key to a host, run:
   #+begin_src sh
     ssh-copy-id -f -i path/to/pubkey username@remote_host
   #+end_src

   Also, add ssh pub keys to Gitlab and/or Github. Don't forget to backup the private key safely.

** Set up Git & other useful tooling
   1. First, install [[https://www.gnu.org/software/stow/][GNU Stow]] with =brew install stow=.
   2. =mkdir -p ~/Workspace ~/Workspace/work ~/Workspace/play ~/Workspace/vendor=
   3. =cd ~/Workspace/play=
   4. =git clone https://github.com/bitsofparag/dotfiles.git=
   5. Symlink the git config files from the just-downloaded dotfiles repo:
      #+begin_src sh
        dotfiles=/path/to/dotfiles
        stow -d $dotfiles -nvt ~ gitconfig # dry run
        stow -d $dotfiles -vRt ~ gitconfig
      #+end_src
   6. Install [[https://github.com/tj/git-extras][git extras]] with =brew install git-extras=. See commands [[https://github.com/tj/git-extras/blob/master/Commands.md][here]].
   7. Install fancy diffing with =brew install diff-so-fancy=.
   8. Install fancy quick-to-read man pages utility with =brew install tldr=.
   9. Install Cookiecutter with =brew install cookiecutter=.
   10. /(Optional)/ Install updated Gem from brew with =brew install gem=.
       Make sure the correct ruby version is picked up in $PATH.
       Normally brew installs =gem= in =/usr/local/opt/ruby=.
   11. If you installed the ri docs as well, then remove all docs with =rm -r "$(gem env gemdir)"/doc/*=.
   12. /(Optional)/ Install [[https://docs.fastlane.tools/][Fastlane]] with =gem install --user-install fastlane -NV=.
   13. Install make essentials with =brew install pkg-config automake=.
   14. Install [[https://stedolan.github.io/jq/][jq]] with =brew install jq=.
   15. Install [[https://github.com/mikefarah/yq][yq]] with =brew install yq=.


** Shell setup

There are many good terminal emulators out there, such as ZSH, Fish, xTerm etc.
Choose what you're most comfortable with. This guide will set up ZSH on top of [[https://iterm2.com/][iTerm2]].

   1. Open Terminal and install =brew install --cask iterm2=.
   2. Open =iterm2= and set to zsh by: =chsh -s /bin/zsh=.
   3. Check =$PATH=. It should be something like
      #+begin_src sh
        /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
      #+end_src

   4. Remove =/etc/paths= file.

   5. Install a good, legible font. [[https://fonts.google.com/specimen/IBM+Plex+Mono][IBM Plex Mono]] and [[https://www.jetbrains.com/lp/mono/][Jetbrains Mono]] are two of my favorites. Set
      the iTerm font as well.
   6. Install "Oh My Zsh" - =sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"=.
   7. Install [[https://github.com/zsh-users/zsh-syntax-highlighting][syntax highlighting plugin]]:
	        #+begin_src sh
            git clone https://github.com/zsh-users/zsh-syntax-highlighting.git \
                ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
          #+end_src
   8. Similarly, install and activate [[https://github.com/zsh-users/zsh-autosuggestions][zsh autosuggestions]]:
       #+begin_src sh
         git clone https://github.com/zsh-users/zsh-autosuggestions \
             $ZSH_CUSTOM/plugins/zsh-autosuggestions
       #+end_src
   9. Install [[https://github.com/junegunn/fzf#installation][fzf]].
   10. Install fzf keybindings - =/usr/local/opt/fzf/install=.
   11. Symlink zsh config files with functions
        #+begin_src sh
          stow -d $dotfiles -vRt $HOME zsh

          cat <<EOF > $HOME/.zshenv
          source $HOME/.zshenv.common
          EOF

          cat <<EOF > $HOME/.zshrc
          source $ZSH/oh-my-zsh.sh
          source ~/.zshrc.common
          EOF
        #+end_src
   12. Install [[https://github.com/sharkdp/bat][bat]] to replace cat: =brew install bat=.
   13. Install [[https://github.com/abishekvashok/cmatrix/][CMatrix]] for fancy =clear= command (which should be aliased
        already in the dotfiles; see step 21.)
   14. Install [[http://mama.indstate.edu/users/ice/tree/][tree]] with =brew install tree=.
   15. Install [[https://github.com/emcrisostomo/fswatch][fswatch]] with =brew install fswatch=.

** Node and NPM setup
   :PROPERTIES:
   :CUSTOM_ID: Node and NPM setup
   :END:

I am not a big fan of NPM. But sometimes I have to use NPM in order to collaborate with other devs
or run node packages. Therefore, to prevent me from hurling the laptop at the wall, I chose to work
with [[https://pnpm.io/][pnpm]] and [[https://volta.sh/][Volta]] - keeps things sane and simple. Alternatives to them would be either [[https://github.com/nvm-sh/nvm][NVM]] or [[https://github.com/tj/n][n]].

   1. Install [[https://docs.volta.sh/guide/getting-started][Volta]] via brew: =curl https://get.volta.sh | bash=. The installation will
      automatically add entries to the shell profile, like so:
      #+begin_src sh
       export VOLTA_HOME="$HOME/.volta"
       export PATH="$VOLTA_HOME/bin:$PATH"
      #+end_src

      Install the lts and the latest versions of node:
         #+begin_src sh
         volta install node@lts  # installs lts
         volta pin node@lts
         volta list
         #+end_src
   2. Install [[https://deno.land/][Deno]] with =brew install deno=.
   3. Install [[https://pnpm.io/installation][pnpm]] with =curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm=.
   4. /(Optional)/ Install global packages:
      #+begin_src sh
        pnpm add -g @storybook/cli \
            eslint \
            js-beautify \
            prettier \
            import-js \
            http-server \
            typescript typescript-language-server \
            dockerfile-language-server-nodejs \
            bash-language-server \
            @cloudflare/wrangler \
            semver
      #+end_src
   5. Check the packages installed globally:
      #+begin_src sh
      pnpm ls -depth=0 -g
      #+end_src
   6. /(If n is installed)/ If you have other node versions, copy the same packages over with:
      #+begin_src sh
      n install <version> --reinstall-packages-from=<prev version>
      #+end_src

** Pyenv setup
   1. Install with =brew install pyenv pyenv-virtualenv=
   2. Install updated python3 version with =pyenv install 3.10.2=.
      It should show the following output:
      #+begin_example
      Installing Python-3.10.2...
      python-build: use readline from homebrew
      python-build: use zlib from xcode sdk
      Installed Python-3.10.2 to /Users/parag/.pyenv/versions/3.10.2
      #+end_example
   3. Set up python3 globally with =pyenv global 3.10.2=.
   4. Install some commonly used packages with pip:
      #+begin_src sh
      pip install ansible 'python-lsp-server[all]' \
                  requests 'ptvsd>=4.2' flake8 autoflake \
                  importmagic epc
      #+end_src

** Rust setup
   Taken from [[https://www.rust-lang.org/tools/install][here]].
   #+BEGIN_SRC sh
     curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   #+END_SRC

   /To uninstall, run =rustup self uninstall=/

   #+BEGIN_SRC sh
     cargo install cargo-edit
     cargo install cargo-audit
     cargo install cargo-outdated
     rustup component add rustfmt
     rustup component add clippy
   #+END_SRC

   To learn Rust with Rustlings, install as follows:
     #+BEGIN_SRC sh
       curl -L https://git.io/install-rustlings | bash -s ~/Workspace/vendor/rustlings
     #+END_SRC
   /Or you can also learn on [[https://repl.it/github/rust-lang/rustlings][Repl.it]]/

** Golang setup
   1. Install golang with =brew install go=.
   2. Set the go workspace with =$GOPATH=. This should already be set from the shell setup above. If not, then:
      #+begin_src sh
      export GOPATH=$HOME/Workspace/vendor/go
      #+end_src

** Other languages
*** Nim setup
    1. Install =choosenim= with =curl https://nim-lang.org/choosenim/init.sh -sSf | sh=
    2. Nim should be available in the "$HOME/.local/bin" path (see personal dotfiles for path settings).
    3. =choosenim show=
    4. =nimble install nimlsp=

*** C-C++ setup
    1. Ensure your emacs config is ready with correct C-C++ requirements.
    2. Install src code indexer [[https://github.com/Andersbakken/rtags][RTags]] with =brew install rtags=.

** Java setup
   1. Install java on Catalina with =brew tap AdoptOpenJDK/openjdk && brew install --cask adoptopenjdk8=.
   2. Verify with =java -version=.

** Install Android Studio
   1. TODO: link to file

** Emacs setup
   1. Install emacs:
      #+begin_src sh
      brew tap d12frosted/emacs-plus
      brew install emacs-plus
      brew linkapps emacs-plus
      # or ln -s /usr/local/Cellar/emacs-plus/26.3/Emacs.app/ /Applications
      #+end_src
   2. Install [[https://github.com/syl20bnr/spacemacs#install][spacemacs]]:
      #+begin_src sh
        git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
      #+end_src
   3. Install [[https://github.com/adobe-fonts/source-code-pro/releases/tag/variable-fonts][Source Code]] font.
   4. Check out the develop branch: =cd ~/.emacs.d && git checkout develop=
   5. Symlink config files from your dotfiles:
      If using =stow=, then:
      #+begin_src sh
      dotfiles=path/to/dotfiles
      stow -d $dotfiles -vRt ~ emacs  # links spacemacs and other dot configs
      stow -d $dotfiles -vRt ~/.emacs.d/private emacsd-private-snippets # links snippets
      stow -d $dotfiles -vRt ~/.emacs.d/private/local emacsd-private-local # links everything in local
      #+end_src

      If not using =stow=,
      #+BEGIN_SRC sh
      ln -s $HOME/Workspace/play/dotfiles/.spacemacs $HOME/.spacemacs
      rm -rf $HOME/.emacs.d/private/snippets
      ln -s $HOME/Workspace/play/dotfiles/snippets $HOME/.emacs.d/private/snippets
      git checkout $HOME/.emacs.d/private/snippets/README.md
      #+END_SRC
   6. Install [[https://lasr.cs.ucla.edu/geoff/ispell.html][iSpell]] for emacs with =brew install ispell=.
   7. Install [[https://github.com/ggreer/the_silver_searcher][ag]] with =brew install ag= (for searching in emacs).
   8. Install [[https://pygments.org/][Pygments]] as a generic syntax highlighter.
   9. Install [[https://gitlab.freedesktop.org/poppler/poppler][Poppler]], a PDF-rendering library with =brew install poppler=.

      /Or open emacs and run =pdf-tools-install=/
   10. Install BasicTeX as the latex package with =brew install --cask basictex=.
       1. Make sure =/Library/Tex/bin= is in the =$PATH=. /(With dotfiles, you should already have it so)/.
       2. Update =tlmgr= with =sudo tlmgr update --self=.
       3. Install additional latex packages with:
          #+BEGIN_SRC sh
            tlmgr install wrapfig capt-of catchfile
            tlmgr install dvipng titling hyphenat titlesec enumitem
            tlmgr install chemfig simplekv mhchem
            tlmgr install minted fvextra xstring framed # for minted
          #+END_SRC
   11. Start emacs from the Applications.
   12. Enable markdown in =org-export-backends= (with Customize).

** Postgres setup
   1. Install postgresql with =brew install postgresql=.
   2. Start postgres (not as a background service) with =pg_ctl -D /usr/local/var/postgres start=.
   3. Install [[https://tableplus.com/][TablePlus]] app (paid) as the GUI utility for all DBs with =brew install --cask tableplus=.

** Devops setup
   1. Install aws-cli with =brew tap aws/tap && brew install awscli=.
   2. Install AWS SAM: =brew tap aws/tap && brew install aws-sam-cli=.
   3. Install aws session-manager-plugin with =brew install --cask
      session-manager-plugin=.
      You might need to manually run it once since the program is not verified.
   4. Install [[https://github.com/dutchcoders/cloudman][Cloudman]] with =brew install dutchcoders/cloudman/cloudman=.
   5. Set up Hashicorp tap for their products with =brew tap hashicorp/tap=.
   6. Install [[https://terraform.io][Terraform]] with =brew install hashicorp/tap/terraform terraform-docs=.
   7. Install [[https://nomadproject.io][Nomad]] with =brew install hashicorp/tap/nomad=.
   8. Install [[https://www.consul.io][Consul]] with =brew install hashicorp/tap/consul=.
   9. Install [[https://www.packer.io/][Packer]] with =brew install hashicorp/tap/packer=.
   10. Install [[https://www.vaultproject.io/][Vault]] with =brew install hashicorp/tap/vault=.
   11. Install [[https://learn.hashicorp.com/waypoint][Waypoint]] with =brew install hashicorp/tap/waypoint=.
   12. Install [[https://docs.openfaas.com/cli/install/][Faas]] with =brew install faas-cli=.
   13. Install [[https://www.docker.com/products/docker-desktop][Docker desktop]] for mac.
   14. Install [[https://podman.io][Podman]] with =brew install podman=.
   15. Install Virtualbox with =brew install --cask virtualbox=.
   16. Install [[https://www.vagrantup.com/][Vagrant]] with =brew install --cask vagrant=.
   17. Install Gas Mask with =brew install --cask gas-mask=.
   18. Install [[https://www.postman.com/][Postman app]] with =brew install --cask Postman=.
   19. Install Parquet tools for AWS deser with =brew install parquet-tools=.
   20. Install [[https://github.com/containers/skopeo/blob/main/install.md][Skopeo]] with =brew install skopeo=.
   21. Install [[https://multipass.run][Multipass]] with =brew install --cask multipass=.
   22. Install [[https://github.com/xxh/xxh][xxh]] with =brew install xxh=.
   23. Install [[https://github.com/wagoodman/dive][dive]] with =brew install dive=.

** X11 support setup
   - Install [[https://www.redhat.com/sysadmin/getting-started-socat][socat]] with =brew install socat=. It might be already installed.
   - Install [[https://www.xquartz.org/][xquartz]] with =brew install xquartz=.
   - Log out and log back in
   - Run =socat TCP-LISTEN:6000,reuseaddr,fork UNIX-CLIENT:\"$DISPLAY\"=
** Hardware and firmware setup
   1. Install [[https://docs.platformio.org/en/latest/core/installation.html#macos-homebrew][Platformio]] with =brew install platformio=.
      More details on Platformio mode for emacs can be found [[https://github.com/ZachMassia/platformio-mode][here]].
   2. Install cask drivers
      =brew tap homebrew/cask-drivers=
   3. Install USB to UART support
      =brew install --cask silicon-labs-vcp-driver=
   4. Install [[https://developers.google.com/protocol-buffers/docs/pythontutorial][protobuf]] for protobuf message compilations:
      =brew install protobuf=

** Dropbox setup
   1. Install Dropbox: =brew install --cask dropbox=.

** Password manager setup
   1. Install password managers: =brew install --cask keepassxc lastpass=.
   2. If you installed keepassxc:
      1. open the app
      2. create a new password database (=.kbdx=) and save in Dropbox
      3. set a new master password
      4. go to the app settings
      5. click on "Enable browser integration" and choose Firefox
      6. install the [[https://addons.mozilla.org/en-US/firefox/addon/keepassxc-browser/][Firefox addon]] here
      7. go the addon settings and enable http connection (last option in the
         settings menu)
      8. this opens an authentication dialog where you enter the same details as in the app to enable autofill in browsers

** Install Sketch app
   Follow [[https://www.sketch.com/get/][this link]] to download the app.

** Mail setup
   1. Open Mail app and set up your accounts.
   2. Install [[https://www.thunderbird.net/][Thunderbird]] with =brew install --cask thunderbird=.
   3. If you use [[https://mail.protonmail.com/][Protonmail]], you'll need to add their Bridge app which sets up
      localhost as the IMAP and SMTP servers.

** Music player setup
   1. Install Spotify app - =brew install --cask spotify=
   2. Install Spotify CLI - =brew install shpotify=.
   3. Log in to [[https://developer.spotify.com/my-applications/#!/applications/create][Spotify developer console]] and create an application.
   4. Note down the Client ID and Client Secret.
   5. Create a new file in =$HOME/.shpotify.cfg= and enter the following:
      #+begin_example
        CLIENT_ID="<client id from 3 above>"
        CLIENT_SECRET="<client secret from 3 above>"
      #+end_example
   6. Open Spotify app and play a song.
   7. Run =spotify next= from the command line. Or [[https://github.com/hnarayanan/shpotify#usage][other commands]] from the cli.
   8. Install Deezer with =brew install --cask deezer=.
   9. Install [[https://audius.co/][Audius]] with =brew install --cask audius=.

** Graphics software setup
   - Install [[https://www.blender.org/][blender]] with =brew install --cask blender=.
** Security setup
   1. Install [[https://github.com/cryptomator/cryptomator][Cryptomator]] for file encryption with =brew install --cask cryptomator=.
   2. Install [[https://objective-see.com/products/lulu.html][Lulu]] as the firewall to block unknown outgoing connections, with
      =brew install --cask lulu=.
   3. Install [[https://objective-see.com/products/netiquette.html][Netiquette]] as a network tracker GUI utility: =brew install --cask netiquette=.
   4. Install [[https://objective-see.com/products/oversight.html][Oversight]] as webcam and mic monitoring utility: =brew install --cask oversight=.
   5. Install [[https://www.malwarebytes.com/mac/][Malwarebytes]] for malware detection with =brew install --cask malwarebytes=.

** Wordpress and CMS setup
   1. Install [[https://www.mamp.info/de/mac/][Mamp]] with =brew install --cask mamp=.
** Game development setup
   1. Install [[https://openupm.com/][Unity package manager]] with =npm install -g openupm-cli=.
   2. Install [[https://github.com/inkle/inky/releases][Inkle Studio]] editor with =brew install --cask inky=.

      You can find the repo for developing Inkle games [[https://github.com/bitsofparag/inkle-games][here]].

** Other useful utility packages:
   1. Install [[https://github.com/nicolargo/glances][Glances]] with =brew install glances=. Run as =glances=.
   2. Install [[https://github.com/bootandy/dust][Dust - better du]] with =brew install dust=. Run as =dust --reverse <folder>=.
   3. Install [[https://github.com/ClementTsang/bottom][Bottom]] with =brew install bottom=. Run with =btm --help=.
   4. Install video player [[https://www.videolan.org/vlc/][VLC]] with =brew install --cask vlc=.
   5. Install wireshark-like tool for the terminal (depends on go):
      [UPDATE 2021-02-13] Uninstalled
      #+begin_src sh
      brew install termshark
      #+end_src
      See details on running it [[https://github.com/gcla/termshark][here]].
   6. Install a CI-Friendly tool for document a database, written in Go:
      #+begin_src sh
      brew install k1LoW/tap/tbls
      #+end_src
      See details on running it [[https://github.com/k1LoW/tbls][here]].
   7. Install [[https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-mac][MS Remote Desktop]] with =brew install --cask microsoft-remote-desktop=.
   8. Install [[https://www.spectacleapp.com/][Spectacle app]] as the window manager with =brew install --cask spectacle=.
   9. Install [[https://github.com/JamieMason/ImageOptim-CLI#examples][imageoptim-cli]] with =brew install imageoptim-cli=.
   10. [REMOVED] Install [[https://github.com/iina/iina][iina]] as the movie player with =brew install --cask iina=.
   11. (Optional) Install [[https://www.zoom.us/][Zoom.us]] with =brew install --cask zoomus=.
   12. Install [[https://www.android.com/filetransfer/][Android File Transfer]] via the DMG file.
   13. Install [[https://formulae.brew.sh/cask/inkscape][inkscape]] with =brew install --cask inkscape=.
   14. Install [[https://github.com/npryce/adr-tools][ADR Tools]] with =brew install adr-tools=.
   15. Install [[https://github.com/muesli/duf][Disk Usage/Free Utility (duf)]] with =brew tap muesli/tap && brew install duf=.
   16. Install CSV query utility called [[https://harelba.github.io/q/#installation][q]] with =brew install q=.
   17. Install [[https://graphviz.org/][Graphviz]] with =brew install graphviz=.
   18. [REMOVED] Install [[https://allinone.im/][All-in-one-messenger]] with =brew install --cask all-in-one-messenger=.
   19. Install Video editing software, [[https://www.openshot.org/][Openshot]] with =brew install --cask openshot-video-editor=.
   20. Install Mailstudio app from their downloads page - https://mailstudio.app/
   21. Install [[https://ngrok.com/][ngrok]] with =brew install --cask ngrok=.
   22. Install [[https://github.com/ekzhang/bore][Bore]] with =cargo install bore-cli=.
   23. Install livestreaming and screen recording tool [[https://obsproject.com][OBS]] with =brew install --cask obs=.
   24. Install [[https://imazing.com/][imazing]] with =brew install --cask imazing=.
   25. Install [[https://dictionaries.io/][Dictionaries app]] with =brew install --cask dictionaries=.
   26. Install [[https://slack.com][Slack Desktop app]] with =brew install --cask slack=.
   27. Install [[https://alt-tab-macos.netlify.app/][Alt Tab app]] with =brew install alt-tab=.
   28. Install [[https://signal.org/de/download/][Signal desktop app]] with =brew install --cask signal=.
   29. Install [[https://desktop.telegram.org/][Telegram Desktop app]] with =brew install --cask telegram-desktop-beta=.
